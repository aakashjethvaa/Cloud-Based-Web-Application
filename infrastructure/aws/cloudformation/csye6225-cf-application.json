{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Cloud Formation Template - CSYE6225 - Creating EC2 instance , Security Groups and Ingress Rules",
	"Parameters": {
		"EC2Name": {
			"Type": "String"
		},
		"EC2SecurityGroup": {
			"Type": "String"
		},
		"SubnetId1": {
			"Type": "String"
		},
		"VpcId": {
			"Type": "String"
		},
		"EC2VolumeSize": {
			"Type": "String"
		},
		"EC2VolumeType": {
			"Type": "String"
		},
		"AMIImage": {
			"Type": "String"
		},
		"DynamoDBName": {
			"Type": "String"
		},
		"BucketName": {
			"Type": "String"
		},
		"MasterUsername": {
			"Type": "String"
		},
		"MasterUserPwd": {
			"Type": "String"
		},
		"DBName": {
			"Type": "String"
		},
		"DBInstanceClass": {
			"Type": "String"
		},
		"DBInstanceIdentifier": {
			"Type": "String"
		},
		"DBEngine": {
			"Type": "String"
		},
		"SubnetId2": {
			"Type": "String"
		},
		"SubnetId3": {
			"Type": "String"
		},
		"RDSSecurityGroup": {
			"Type": "String"
		},
		"EC2RoleName": {
			"Type": "String"
		}
	},
	"Resources": {
		"ourEC2Instance": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.micro",
				"DisableApiTermination": "false",
				"ImageId": {
					"Ref": "AMIImage"
				},
				"KeyName":"KeyPair",
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"\n",
							[
								"#!/bin/bash -xe ",
								"yum install ruby ntp wget java-1.8.0-openjdk-devel -y",
								"wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install \n",
								"chmod +x ./install \n",
								"./install auto \n",
								"service codedeploy-agent start \n",
								"systemctl start ntpd",
								"systemctl enable ntpd",
								"groupadd tomcat",
								"useradd -M -s /bin/nologin -g tomcat -d /opt/tomcat tomcat",
								"cd /tmp",
								"wget http://apache.mirrors.pair.com/tomcat/tomcat-8/v8.5.34/bin/apache-tomcat-8.5.34.tar.gz",
								"mkdir /opt/tomcat",
								"tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1",
								"cd /opt/tomcat",
								"chgrp -R tomcat /opt/tomcat",
								"chmod -R g+r conf",
								"chmod g+x conf",
								"chown -R tomcat webapps/ work/ temp/ logs/",
								"cd /usr/lib/systemd/system",
								"touch tomcat.service",
								"echo '[Unit]' > tomcat.service",
								"echo 'Description=Apache Tomcat Web Application Container' >> tomcat.service",
								"echo 'After=syslog.target network.target' >> tomcat.service",
								"echo '[Service]' >> tomcat.service",
								"echo 'Type=forking' >> tomcat.service",
								"echo 'Environment=JAVA_HOME=/usr/lib/jvm/jre' >> tomcat.service",
								"echo 'Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid' >> tomcat.service",
								"echo 'Environment=CATALINA_HOME=/opt/tomcat' >> tomcat.service",
								"echo 'Environment=CATALINA_BASE=/opt/tomcat' >> tomcat.service",
								"echo 'Environment=\"CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC\"' >> tomcat.service",
								"echo 'Environment=\"JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom\"' >> tomcat.service",
								"echo 'ExecStart=/opt/tomcat/bin/startup.sh' >> tomcat.service",
								"echo 'ExecStop=/bin/kill -15 $MAINPID' >> tomcat.service",
								"echo 'User=tomcat' >> tomcat.service",
								"echo 'Group=tomcat' >> tomcat.service",
								"echo 'UMask=0007' >> tomcat.service",
								"echo 'RestartSec=10' >> tomcat.service",
								"echo 'Restart=always' >> tomcat.service",
								"echo '[Install]' >> tomcat.service",
								"echo 'WantedBy=multi-user.target' >> tomcat.service",
								"systemctl daemon-reload",
								"#systemctl start cloudwatch.service",
								"#systemctl enable cloudwatch.service",
								"systemctl enable tomcat.service",
								"systemctl start tomcat.service",
								"#echo \"export JAVA_OPTS=\\\"\\$JAVA_OPTS -Dspring.profiles.active=aws\\\"\" >> /usr/lib/systemd/system/setenv.sh \n",
								{
									"Fn::Join": [
										"", [
											"echo ' export JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.url=\"jdbc:mysql://",
											{
												"Fn::GetAtt": [
													"ourRDSInstance",
													"Endpoint.Address"
												]
											},
											":3306/",
											{
												"Ref": "DBName"
											},
											"\"\"'>> /usr/lib/systemd/system/setenv.sh \n"
										]
									]
								},
								"echo 'export JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.username=\"",
								{
									"Ref": "MasterUsername"
								},
								"\"\"' >> /usr/lib/systemd/system/setenv.sh \n",
								"echo 'export JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.password=\"",
								{
									"Ref": "MasterUserPwd"
								},
								"\"\"' >> //usr/lib/systemd/system/setenv.sh \n",
								"echo 'export JAVA_OPTS=\"$JAVA_OPTS -Damazon.s3.default-bucket=\"",
								{
									"Ref": "BucketName"
								},
								"service tomcat8 restart \n",
								{
									"Fn::Join": [
										"", [
											"debconf-set-selections <<< 'mysql-server mysql-server/root_password password=root'"
										]
									]
								},
								{
									"Fn::Join": [
										"", [
											"debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password=root'"
										]
									]
								},
								"service tomcat8 restart \n",
								"yum install mysql-server \n"
							]
						]
					}
				},
				"BlockDeviceMappings": [{
					"DeviceName": "/dev/sda1",
					"Ebs": {
						"DeleteOnTermination": true,
						"VolumeSize": {
							"Ref": "EC2VolumeSize"
						},
						"VolumeType": {
							"Ref": "EC2VolumeType"
						}
					}
				}],
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Ref": "EC2Name"
					}
				}],
				"SecurityGroupIds": [{
					"Ref": "EC2SecurityGroup"
				}],
				"SubnetId": {
					"Ref": "SubnetId1"
				},
				"IamInstanceProfile": {
					"Ref": "ourIAMInstanceProfile"
				}
			}
		},
		"ourIAMInstanceProfile": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Path": "/",
				"Roles": [{
					"Ref": "EC2RoleName"
				}]
			}
		},
		"ourDynamoTable": {
			"Type": "AWS::DynamoDB::Table",
			"Properties": {
				"KeySchema": [{
					"AttributeName": "id",
					"KeyType": "HASH"
				}],
				"AttributeDefinitions": [{
					"AttributeName": "id",
					"AttributeType": "S"
				}],
				"TableName": {
					"Ref": "DynamoDBName"
				},
				"ProvisionedThroughput": {
					"ReadCapacityUnits": "5",
					"WriteCapacityUnits": "5"
				}
			}
		},
		"ourS3Bucket": {
			"Type": "AWS::S3::Bucket",
			"Description": "S3 Bucket to store attachment files",
			"Properties": {
				"AccessControl": "Private",
				"BucketName": {
					"Ref": "BucketName"
				}
			}
		},
		"ourRDSDBSubnet": {
			"Type": "AWS::RDS::DBSubnetGroup",
			"Properties": {
				"DBSubnetGroupDescription": "Subnet Group fro RDS Instance",
				"SubnetIds": [{
						"Ref": "SubnetId2"
					},
					{
						"Ref": "SubnetId3"
					}
				]
			}
		},
		"ourRDSInstance": {
			"Type": "AWS::RDS::DBInstance",
			"Properties": {
				"AllocatedStorage": "10",
				"MasterUsername": {
					"Ref": "MasterUsername"
				},
				"MasterUserPassword": {
					"Ref": "MasterUserPwd"
				},
				"MultiAZ": false,
				"PubliclyAccessible": false,
				"DBName": {
					"Ref": "DBName"
				},
				"DBInstanceClass": {
					"Ref": "DBInstanceClass"
				},
				"DBInstanceIdentifier": {
					"Ref": "DBInstanceIdentifier"
				},
				"Engine": {
					"Ref": "DBEngine"
				},
				"DBSubnetGroupName": {
					"Ref": "ourRDSDBSubnet"
				},
				"VPCSecurityGroups": [{
					"Ref": "RDSSecurityGroup"
				}]
			}
		}
	}
}
