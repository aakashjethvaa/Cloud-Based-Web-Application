{
<<<<<<< HEAD
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Cloud Formation Template - CSYE6225 - Creating EC2 instance , Security Groups and Ingress Rules",
	"Parameters": {
		"EC2Name": {
			"Type": "String"
		},
		"EC2SecurityGroup": {
			"Type": "String"
		},
		"SubnetId1": {
			"Type": "String"
		},
		"VpcId": {
			"Type": "String"
		},
		"EC2VolumeSize": {
			"Type": "String"
		},
		"EC2VolumeType": {
			"Type": "String"
		},
		"AMIImage": {
			"Type": "String"
		},
		"DynamoDBName": {
			"Type": "String"
		},
		"BucketName": {
			"Type": "String"
		},
		"MasterUsername": {
			"Type": "String"
		},
		"MasterUserPwd": {
			"Type": "String"
		},
		"DBName": {
			"Type": "String"
		},
		"DBInstanceClass": {
			"Type": "String"
		},
		"DBInstanceIdentifier": {
			"Type": "String"
		},
		"DBEngine": {
			"Type": "String"
		},
		"SubnetId2": {
			"Type": "String"
		},
		"SubnetId3": {
			"Type": "String"
		},
		"RDSSecurityGroup": {
			"Type": "String"
		},
		"EC2RoleName": {
			"Type": "String"
		}
	},
	"Resources": {
		"ourEC2Instance": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.micro",
				"DisableApiTermination": "false",
				"ImageId": {
					"Ref": "AMIImage"
				},
				"KeyName": "MyKeyPair",
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"\n",
							[
								"#!/bin/bash -xe ",
								"yum install ruby ntp wget java-1.8.0-openjdk-devel -y",
								"wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install \n",
								"chmod +x ./install \n",
								"./install auto \n",
								"service codedeploy-agent start \n",
								"systemctl start ntpd",
								"systemctl enable ntpd",
								"groupadd tomcat",
								"useradd -M -s /bin/nologin -g tomcat -d /opt/tomcat tomcat",
								"cd /tmp",
								"wget http://apache.mirrors.pair.com/tomcat/tomcat-8/v8.5.34/bin/apache-tomcat-8.5.34.tar.gz",
								"mkdir /opt/tomcat",
								"tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1",
								"cd /opt/tomcat",
								"chgrp -R tomcat /opt/tomcat",
								"chmod -R g+r conf",
								"chmod g+x conf",
								"chown -R tomcat webapps/ work/ temp/ logs/",
								"cd /usr/lib/systemd/system",
								"touch tomcat.service",
								"echo '[Unit]' > tomcat.service",
								"echo 'Description=Apache Tomcat Web Application Container' >> tomcat.service",
								"echo 'After=syslog.target network.target' >> tomcat.service",
								"echo '[Service]' >> tomcat.service",
								"echo 'Type=forking' >> tomcat.service",
								"echo 'Environment=JAVA_HOME=/usr/lib/jvm/jre' >> tomcat.service",
								"echo 'Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid' >> tomcat.service",
								"echo 'Environment=CATALINA_HOME=/opt/tomcat' >> tomcat.service",
								"echo 'Environment=CATALINA_BASE=/opt/tomcat' >> tomcat.service",
								"echo 'Environment=\"CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC\"' >> tomcat.service",
								"echo 'Environment=\"JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom\"' >> tomcat.service",
								"echo 'ExecStart=/opt/tomcat/bin/startup.sh' >> tomcat.service",
								"echo 'ExecStop=/bin/kill -15 $MAINPID' >> tomcat.service",
								"echo 'User=tomcat' >> tomcat.service",
								"echo 'Group=tomcat' >> tomcat.service",
								"echo 'UMask=0007' >> tomcat.service",
								"echo 'RestartSec=10' >> tomcat.service",
								"echo 'Restart=always' >> tomcat.service",
								"echo '[Install]' >> tomcat.service",
								"echo 'WantedBy=multi-user.target' >> tomcat.service",
								"systemctl daemon-reload",
								"#systemctl start cloudwatch.service",
								"#systemctl enable cloudwatch.service",
								"systemctl enable tomcat.service",
								"systemctl start tomcat.service",
								"echo \"export JAVA_OPTS=\\\"\\$JAVA_OPTS -Dspring.profiles.active=aws\"\" >> /opt/tomcat/bin/setenv.sh\n",
								{
									"Fn::Join": [
										"", [
											"echo ' export JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.url=\"jdbc:mysql://",
											{
												"Fn::GetAtt": [
													"ourRDSInstance",
													"Endpoint.Address"
												]
											},
											":3306/",
											{
												"Ref": "DBName"
											},
											"\"\" >> /opt/tomcat/bin/setenv.sh\n"
										]
									]
								},
								"echo 'export JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.username=\"",
								{
									"Ref": "MasterUsername"
								},
								"\"\" >> /opt/tomcat/bin/setenv.sh\n",
								"echo 'export JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.password=\"",
								{
									"Ref": "MasterUserPwd"
								},
								"\"\" >> /opt/tomcat/bin/setenv.sh\n",
								"echo 'export JAVA_OPTS=\"$JAVA_OPTS -Damazon.s3.default-bucket=\"",
								{
									"Ref": "BucketName"
								},
								"chmod +x /opt/tomcat/bin/setenv.sh\n",
								"#systemctl daemon-reload\n",
								"systemctl enable tomcat.service\n",
								"systemctl start tomcat.service\n"
							]
						]
					}
				},
				"BlockDeviceMappings": [{
					"DeviceName": "/dev/sda1",
					"Ebs": {
						"DeleteOnTermination": true,
						"VolumeSize": {
							"Ref": "EC2VolumeSize"
						},
						"VolumeType": {
							"Ref": "EC2VolumeType"
						}
					}
				}],
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Ref": "EC2Name"
					}
				}],
				"SecurityGroupIds": [{
					"Ref": "EC2SecurityGroup"
				}],
				"SubnetId": {
					"Ref": "SubnetId1"
				},
				"IamInstanceProfile": {
					"Ref": "ourIAMInstanceProfile"
				}
			}
		},
		"ourIAMInstanceProfile": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Path": "/",
				"Roles": [{
					"Ref": "EC2RoleName"
				}]
			}
		},
		"ourDynamoTable": {
			"Type": "AWS::DynamoDB::Table",
			"Properties": {
				"KeySchema": [{
					"AttributeName": "id",
					"KeyType": "HASH"
				}],
				"AttributeDefinitions": [{
					"AttributeName": "id",
					"AttributeType": "S"
				}],
				"TableName": {
					"Ref": "DynamoDBName"
				},
				"ProvisionedThroughput": {
					"ReadCapacityUnits": "5",
					"WriteCapacityUnits": "5"
				}
			}
		},
		"ourS3Bucket": {
			"Type": "AWS::S3::Bucket",
			"Description": "S3 Bucket to store attachment files",
			"Properties": {
				"AccessControl": "Private",
				"BucketName": {
					"Ref": "BucketName"
				}
			}
		},
		"ourRDSDBSubnet": {
			"Type": "AWS::RDS::DBSubnetGroup",
			"Properties": {
				"DBSubnetGroupDescription": "Subnet Group fro RDS Instance",
				"SubnetIds": [{
						"Ref": "SubnetId2"
					},
					{
						"Ref": "SubnetId3"
					}
				]
			}
		},
		"ourRDSInstance": {
			"Type": "AWS::RDS::DBInstance",
			"Properties": {
				"AllocatedStorage": "10",
				"MasterUsername": {
					"Ref": "MasterUsername"
				},
				"MasterUserPassword": {
					"Ref": "MasterUserPwd"
				},
				"MultiAZ": false,
				"PubliclyAccessible": false,
				"DBName": {
					"Ref": "DBName"
				},
				"DBInstanceClass": {
					"Ref": "DBInstanceClass"
				},
				"DBInstanceIdentifier": {
					"Ref": "DBInstanceIdentifier"
				},
				"Engine": {
					"Ref": "DBEngine"
				},
				"DBSubnetGroupName": {
					"Ref": "ourRDSDBSubnet"
				},
				"VPCSecurityGroups": [{
					"Ref": "RDSSecurityGroup"
				}]
			}
		}
	}
=======

  "Description" : "Creation of Stack for Assignment 4",
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Parameters" : {
    "stackname" : {
      "Description" : "Stack Name",
      "Type" : "String",
      "Default" : "stack01"

    },
"subnetid" : {
      "Description" : "Subnet Group name",
      "Type" : "String"

    },
    "securitygrp" : {
      "Description" : "Security Group name",
      "Type" : "String"

  },
  "VpcId" : {
      "Description" : "VPC ID",
      "Type" : "String"

  },
  "instanceProfileName" : {
    "Description" : "InstanceProfileName",
    "Type" : "String"

},
"s3artifact" : {
  "Description" : "s3 artifact bucket name",
  "Type" : "String"
},
"s3attachment" : {
  "Description" : "s3 attachment bucket name",
  "Type" : "String"
}		


  },

  "Resources": {
      "EC2Instance": {
          "Type": "AWS::EC2::Instance",
          "Properties": {
              "ImageId": "ami-9887c6e7",
              "InstanceType": "t2.micro",
              "KeyName" : "MyKeyPair",
              "DisableApiTermination": "False",
              "SecurityGroupIds":[{"Fn::GetAtt":["WebServerSecurityGroup","GroupId"]}],
              "SubnetId":{"Ref":"subnetid" } ,
              "Tags" : [ {"Key" : "Name", "Value" : "EC2Instance" } ],
              "IamInstanceProfile":{ "Ref":"instanceProfileName" },
              "BlockDeviceMappings" : [
              {
              "DeviceName" : "/dev/sda1",
              "Ebs" : {
                        "DeleteOnTermination": true,
                        "VolumeSize": 20,
                        "VolumeType": "gp2"
                      }
              }
              ],
              "UserData": {
                "Fn::Base64": {
                    "Fn::Join": [
                        "\n",
                        [
                            "#!/bin/bash -xe",  
                            "yum install ruby ntp wget java-1.8.0-openjdk-devel -y",
                            "systemctl start ntpd",
                            "systemctl enable ntpd",
                            "wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install",
                            "chmod +x ./install",
                            "./install auto",
                            "service codedeploy-agent start",
                            "groupadd tomcat",
                            "useradd -M -s /bin/nologin -g tomcat -d /opt/tomcat tomcat",
                            "cd /tmp",
                            "wget http://apache.mirrors.pair.com/tomcat/tomcat-8/v8.5.34/bin/apache-tomcat-8.5.34.tar.gz",
                            "mkdir /opt/tomcat",
                            "tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1",
                            "cd /opt/tomcat",
                            "chgrp -R tomcat /opt/tomcat",
                            "chmod -R g+r conf",
                            "chmod g+x conf",
                            "chown -R tomcat webapps/ work/ temp/ logs/",
                            "cd /usr/lib/systemd/system",
                            "touch tomcat.service",
                            "echo '[Unit]' > tomcat.service",
                            "echo 'Description=Apache Tomcat Web Application Container' >> tomcat.service",
                            "echo 'After=syslog.target network.target' >> tomcat.service",
                            "echo '[Service]' >> tomcat.service",
                            "echo 'Type=forking' >> tomcat.service",
                            "echo 'Environment=JAVA_HOME=/usr/lib/jvm/jre' >> tomcat.service",
                            "echo 'Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid' >> tomcat.service",
                            "echo 'Environment=CATALINA_HOME=/opt/tomcat' >> tomcat.service",
                            "echo 'Environment=CATALINA_BASE=/opt/tomcat' >> tomcat.service",
                            "echo 'Environment=\"CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC\"' >> tomcat.service",
                            {
                              "Fn::Join":[
                                  "",
                                  [
                                    "echo 'Environment=\"JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom -Dspring.datasource.username=csye6225master -Dspring.datasource.password=csye6225password -Dspring.profiles.active=dev -Dspring.datasource.url=jdbc:mysql://",
                                    {
                                      "Fn::GetAtt":[
                                        "MyRDS",
                                        "Endpoint.Address"
                                      ]
                                    },
                                    ":3306/csye6225\"' >> tomcat.service"
                                  ]
                              ]
                            },
                            "echo 'ExecStart=/opt/tomcat/bin/startup.sh' >> tomcat.service",
                            "echo 'ExecStop=/bin/kill -15 $MAINPID' >> tomcat.service",
                            "echo 'User=tomcat' >> tomcat.service",
                            "echo 'Group=tomcat' >> tomcat.service",
                            "echo 'UMask=0007' >> tomcat.service",
                            "echo 'RestartSec=10' >> tomcat.service",
                            "echo 'Restart=always' >> tomcat.service",
                            "echo '[Install]' >> tomcat.service",
                            "echo 'WantedBy=multi-user.target' >> tomcat.service",
                            "systemctl daemon-reload",
                            "#systemctl start cloudwatch.service",
                            "#systemctl enable cloudwatch.service",
                            "systemctl enable tomcat.service",
                            "systemctl start tomcat.service",
          "mkdir /opt/aws",
          "cd /home/centos",
          "wget https://s3.amazonaws.com/amazoncloudwatch-agent/centos/amd64/latest/amazon-cloudwatch-agent.rpm",
          "rpm -U ./amazon-cloudwatch-agent.rpm",
          "touch /opt/aws/config.json",
          "echo '{\"agent\":{\"metrics_collection_interval\":10,\"logfile\":\"/var/logs/amazon-cloudwatch-agent.log\"},\"metrics\":{\"metrics_collected\":{\"statsd\":{\"service_address\":\":8125\",\"metrics_collection_interval\":10,\"metrics_aggregation_interval\":30}}},\"logs\":{\"logs_collected\":{\"files\":{\"collect_list\":[{\"file_path\":\"/opt/tomcat/logs/catalina.out\",\"log_group_name\":\"csye6225_fall2018\",\"log_stream_name\":\"webapp\"}]}},\"log_stream_name\":\"cloudwatch_log_stream\"}}' >> /opt/aws/config.json",
          "/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/config.json -s",
          "systemctl restart amazon-cloudwatch-agent.service"
                        ]
                    ]
                }
            }
          }
      },
      "WebServerSecurityGroup" : {
    "Type" : "AWS::EC2::SecurityGroup",
    "Properties" : {
      "GroupName" : "csye6225-webapp",
      "GroupDescription" : "Open http access ports 22, 80 & 443",
      "VpcId": {"Ref":"VpcId"},
      "SecurityGroupIngress" : [ {
        "IpProtocol" : "tcp",
        "FromPort" : "22",
        "ToPort" : "22",
      "CidrIp" : "0.0.0.0/0" },
      {
        "IpProtocol" : "tcp",
        "FromPort" : "80",
        "ToPort" : "80",
      "CidrIp" : "0.0.0.0/0" },
      {
        "IpProtocol" : "tcp",
        "FromPort" : "443",
        "ToPort" : "443",
        "CidrIp" : "0.0.0.0/0"
      },{
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": "0.0.0.0/0"
      } ],
      
      "Tags" : [ {"Key" : "Name", "Value" : "WebServerSecurityGroup" } ]
    }
  },
  "DBEC2SecurityGroup": {
    "Type": "AWS::EC2::SecurityGroup",
    "Properties" : {
      "GroupName": "csye6225-rds",
      "GroupDescription": "Open Mysql database access",
      "SecurityGroupIngress" : [{
        "IpProtocol" : "tcp",
        "FromPort" : "3306",
        "ToPort" : "3306",
        "SourceSecurityGroupId" : { "Ref" : "WebServerSecurityGroup" }
      }],
      "VpcId": {"Ref":"VpcId"}
    }

      },
      "S3" : {
          "Type" : "AWS::S3::Bucket",
          "Properties" : {
            "BucketName" : {"Ref":"s3attachment"}
          }
        },
        "CS3" : {
          "Type" : "AWS::S3::Bucket",
          "Properties" : {
            "BucketName" : {"Ref":"s3artifact"}
          }
        },
    
      "DynamoDBTable" : {
          "Type" : "AWS::DynamoDB::Table",
          "Properties" : {
            "AttributeDefinitions" : [
              {
                "AttributeName" : "ID",
                "AttributeType" : "S"
              }
            ],
            "KeySchema" : [
              {
                "AttributeName" : "ID",
                "KeyType" : "HASH"
              }
            ],
            "ProvisionedThroughput" : {
          "ReadCapacityUnits" : "5",
              "WriteCapacityUnits" : "5"
            },
            "TimeToLiveSpecification":{
              "AttributeName":"TTL",
              "Enabled":"TRUE"
           },
            "TableName" : "csye6225"
          }
    },
    "MyRDS":{
      "Type":"AWS::RDS::DBInstance",
      "Properties":{
         "AllocatedStorage":"16",
         "Engine":"MYSQL",
         "EngineVersion":"5.6.37",
         "DBInstanceClass":"db.t2.micro",
         "MultiAZ":"false",
         "DBInstanceIdentifier":"csye6225-spring2018",
         "AvailabilityZone":"us-east-1a",
         "MasterUsername":"csye6225master",
         "MasterUserPassword":"csye6225password",
         "DBSubnetGroupName":"csye6225-db-subnetgroup",
         "VPCSecurityGroups":[
            {
               "Ref":"DBEC2SecurityGroup"
            }
         ],
         "PubliclyAccessible":"false",
         "DBName": "csye6225"
         
      }
   }



      



}
>>>>>>> 17ab7d6fff12270986c87bec7d4d4eaca191b16e
}


